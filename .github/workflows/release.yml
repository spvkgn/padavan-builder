name: Release

on:
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: GH
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: echo "RUN_ID=$(gh run list --json databaseId --workflow build.yml --limit 1 -q '.[0].databaseId' -R ${{ github.repository }})" >> $GITHUB_ENV

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ env.RUN_ID }}

    - name: Prepare for release upload
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        printf "| %s | %s | %s |\n" Device "Firmware filename" sha256sum --- --- --- > body.txt
        for dir in $(ls -d padavan-ng*); do
          (
            cd $dir
            FW_FILE=$(ls *.trx)
            VENDOR=$(grep -Po '^CONFIG_VENDOR=\K.+' *.config)
            PRODUCT_ID=$(echo $FW_FILE | cut -d_ -f1)
            RELEASE_ZIP=$(basename $FW_FILE .trx).zip
            # Generate checksum
            printf "| %s | %s | %s |\n" "$VENDOR $PRODUCT_ID" $FW_FILE $(sha256sum $FW_FILE | tee -a sha256sums.txt | awk '{ print $1 }') >> $GITHUB_WORKSPACE/body.txt
            # Create release zip
            zip $GITHUB_WORKSPACE/$RELEASE_ZIP $FW_FILE build.config build_firmware.log sha256sums.txt
          )
        done
        # Delete existing release
        gh release delete latest --cleanup-tag -y -R ${{ github.repository }} || true
        # Get FW version
        wget https://gitlab.com/hadzhioglu/padavan-ng/-/raw/master/trunk/versions.inc
        VERS=$(awk -F= '/FIRMWARE_ROOTFS_VER/ { rootfs=$2 } /FIRMWARE_BUILDS_VER/ { print rootfs "-" $2 }' versions.inc)
        SHA_SHORT=$(wget -qO- https://gitlab.com/api/v4/projects/40277088/repository/commits | jq -r '.[0].short_id')
        echo "FW_VERSION=3.4.$VERS-$SHA_SHORT" >> $GITHUB_ENV

    - name: Upload release
      uses: softprops/action-gh-release@v2
      with:
        fail_on_unmatched_files: true
        prerelease: false
        draft: false
        tag_name: latest
        name: ${{ env.FW_VERSION }}
        body_path: body.txt
        files: '*.zip'
