name: Release

on:
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: GH
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "RUN_ID=$(gh run list --json databaseId --workflow build.yml --limit 1 -q '.[0].databaseId' -R ${{ github.repository }})" >> $GITHUB_ENV

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ env.RUN_ID }}

    - name: Prepare for release upload
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd padavan-ng*
        VENDOR=$(grep -Po '^CONFIG_VENDOR=\K.+' build.config)
        PRODUCT_ID=$(ls *.trx | cut -d_ -f1)
        RELEASE_ZIP=$(basename *.trx .trx).zip
        zip $GITHUB_WORKSPACE/$RELEASE_ZIP *.trx build.config build_firmware.log
        gh release delete $(ls *.trx | cut -d_ -f1) --cleanup-tag -y -R ${{ github.repository }} || true
        # gh run list -w ${{ github.workflow }} -R ${{ github.repository }} | awk -F '\t' '{ print $7 }' | while read id; do gh run delete -R ${{ github.repository }} $id; done
        {
          echo "VENDOR=$VENDOR"
          echo "PRODUCT_ID=$PRODUCT_ID"
          echo "RELEASE_ZIP=$RELEASE_ZIP"
        } >> $GITHUB_ENV

    - name: Upload release
      uses: softprops/action-gh-release@v2
      with:
        fail_on_unmatched_files: true
        prerelease: false
        draft: false
        tag_name: ${{ env.PRODUCT_ID }}
        name: ${{ format('{0} {1}', env.VENDOR, env.PRODUCT_ID) }}
        body: |
          ### ${{ format('{0} {1}', env.VENDOR, env.PRODUCT_ID) }}
        files: ${{ env.RELEASE_ZIP }}
